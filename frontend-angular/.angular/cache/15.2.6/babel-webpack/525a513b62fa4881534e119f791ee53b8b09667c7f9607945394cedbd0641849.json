{"ast":null,"code":"import { Posting } from '../_model/posting';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_service/data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_service/posting.service\";\nimport * as i4 from \"@angular/forms\";\nexport class PostingFormComponent {\n  constructor(dataService, router, postingService) {\n    this.dataService = dataService;\n    this.router = router;\n    this.postingService = postingService;\n  }\n  ngOnInit() {\n    if (this.dataService.editPosting.id == -1) {\n      this.mode = \"add\";\n      this.posting = new Posting();\n    } else {\n      if (this.router.url.substring(this.router.url.length - 4)) this.mode = \"edit\";\n      this.posting = this.dataService.editPosting;\n    }\n  }\n  onSubmit() {\n    if (this.mode == \"add\") {\n      this.postingService.save(this.posting).subscribe(() => this.goToPostingList());\n    }\n    if (this.mode == \"edit\") {\n      this.postingService.update(this.posting).subscribe(() => this.goToPostingList());\n    }\n  }\n  goToPostingList() {\n    this.router.navigate(['/postings']);\n  }\n}\nPostingFormComponent.ɵfac = function PostingFormComponent_Factory(t) {\n  return new (t || PostingFormComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.PostingService));\n};\nPostingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostingFormComponent,\n  selectors: [[\"app-posting-form\"]],\n  decls: 21,\n  vars: 4,\n  consts: [[1, \"card\", \"my-5\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"postingForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"placeholder\", \"Enter posting title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"content\", \"name\", \"content\", \"placeholder\", \"Enter posting content\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"content\", \"ngModel\"], [\"for\", \"enabled\"], [\"type\", \"checkbox\", \"id\", \"enabled\", \"name\", \"enabled\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"enabled\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"]],\n  template: function PostingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PostingFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function PostingFormComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.posting.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 9, 10);\n      i0.ɵɵlistener(\"ngModelChange\", function PostingFormComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.posting.content = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Enabled\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function PostingFormComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.posting.enabled = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 14);\n      i0.ɵɵtext(20, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.posting.title);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.posting.content);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.posting.enabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,mBAAmB;;;;;;AAS3C,OAAM,MAAOC,oBAAoB;EAMhCC,YAAmBC,WAAwB,EAChCC,MAAc,EAAUC,cAA8B;IAD9C,gBAAW,GAAXF,WAAW;IACnB,WAAM,GAANC,MAAM;IAAkB,mBAAc,GAAdC,cAAc;EACjD;EAEAC,QAAQ;IACP,IAAG,IAAI,CAACH,WAAW,CAACI,WAAW,CAACC,EAAE,IAAI,CAAC,CAAC,EAAC;MACxC,IAAI,CAACC,IAAI,GAAG,KAAK;MACjB,IAAI,CAACC,OAAO,GAAG,IAAIV,OAAO,EAAE;KAC5B,MACI;MACJ,IAAG,IAAI,CAACI,MAAM,CAACO,GAAG,CAACC,SAAS,CAAC,IAAI,CAACR,MAAM,CAACO,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC,EACxD,IAAI,CAACJ,IAAI,GAAG,MAAM;MAClB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACP,WAAW,CAACI,WAAW;;EAE7C;EAEAO,QAAQ;IACP,IAAG,IAAI,CAACL,IAAI,IAAI,KAAK,EAAE;MACtB,IAAI,CAACJ,cAAc,CAACU,IAAI,CAAC,IAAI,CAACL,OAAO,CAAC,CAACM,SAAS,CAAC,MAAM,IAAI,CAACC,eAAe,EAAE,CAAC;;IAE/E,IAAG,IAAI,CAACR,IAAI,IAAI,MAAM,EAAE;MACvB,IAAI,CAACJ,cAAc,CAACa,MAAM,CAAC,IAAI,CAACR,OAAO,CAAC,CAACM,SAAS,CAAC,MAAM,IAAI,CAACC,eAAe,EAAE,CAAC;;EAElF;EAEAA,eAAe;IACd,IAAI,CAACb,MAAM,CAACe,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACpC;;AAjCYlB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZjCC,8BAAuB;MAEbA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,8BAAwB;MACHA,qBAAK;MAAAA,iBAAQ;MAChCA,mCAK4B;MALTA;QAAA;MAAA,EAA2B;MAA9CA,iBAK4B;MAE9BA,8BAAwB;MACHA,wBAAO;MAAAA,iBAAQ;MAClCA,qCAK8B;MALXA;QAAA;MAAA,EAA6B;MAAhDA,iBAK8B;MAEhCA,+BAAwB;MACDA,wBAAO;MAAAA,iBAAQ;MACpCA,sCAIqB;MAJEA;QAAA;MAAA,EAA6B;MAApDA,iBAIqB;MAEvBA,mCACuB;MAAAA,uBAAM;MAAAA,iBAAS;;;;MAzBjBA,eAA2B;MAA3BA,2CAA2B;MAS3BA,eAA6B;MAA7BA,6CAA6B;MASzBA,eAA6B;MAA7BA,6CAA6B;MAMhCA,eAAoC;MAApCA,0CAAoC","names":["Posting","PostingFormComponent","constructor","dataService","router","postingService","ngOnInit","editPosting","id","mode","posting","url","substring","length","onSubmit","save","subscribe","goToPostingList","update","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\micah\\_code\\_repos\\DeepForest\\frontend-angular\\src\\app\\posting-form\\posting-form.component.ts","C:\\Users\\micah\\_code\\_repos\\DeepForest\\frontend-angular\\src\\app\\posting-form\\posting-form.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { PostingService } from '../_service/posting.service';\nimport { Posting } from '../_model/posting';\nimport { map } from 'rxjs';\nimport { DataService } from '../_service/data.service';\n\n@Component({\n  selector: 'app-posting-form',\n  templateUrl: './posting-form.component.html',\n  styleUrls: ['./posting-form.component.css']\n})\nexport class PostingFormComponent implements OnInit {\n\n\tposting: Posting;\n\tmode: String;\n    state$: any;\n\t\n\tconstructor(public dataService: DataService,\n\t\t\t\tprivate router: Router, private postingService: PostingService) {\n\t}\n\t\n\tngOnInit() {\n\t\tif(this.dataService.editPosting.id == -1){\n\t\t\tthis.mode = \"add\";\n\t\t\tthis.posting = new Posting();\n\t\t}\n\t\telse {\n\t\t\tif(this.router.url.substring(this.router.url.length - 4))\n\t\t\tthis.mode = \"edit\";\n\t\t\tthis.posting = this.dataService.editPosting;\n\t\t}\n\t}\n\n\tonSubmit() {\n\t\tif(this.mode == \"add\") {\n\t\t\tthis.postingService.save(this.posting).subscribe(() => this.goToPostingList());\n\t\t}\n\t\tif(this.mode == \"edit\") {\n\t\t\tthis.postingService.update(this.posting).subscribe(() => this.goToPostingList());\n\t\t}\n\t}\n\t\n\tgoToPostingList() {\n\t\tthis.router.navigate(['/postings']);\n\t}\n}\n","<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <form (ngSubmit)=\"onSubmit()\" #postingForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" [(ngModel)]=\"posting.title\" \n          class=\"form-control\" \n          id=\"title\" \n          name=\"title\" \n          placeholder=\"Enter posting title\"\n          required #title=\"ngModel\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Content</label>\n        <input type=\"text\" [(ngModel)]=\"posting.content\" \n          class=\"form-control\" \n          id=\"content\" \n          name=\"content\" \n          placeholder=\"Enter posting content\"\n          required #content=\"ngModel\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"enabled\">Enabled</label>\n        <input type=\"checkbox\" [(ngModel)]=\"posting.enabled\" \n          class=\"form-control\" \n          id=\"enabled\" \n          name=\"enabled\" \n          #enabled=\"ngModel\">\n      </div>\n      <button type=\"submit\" [disabled]=\"!postingForm.form.valid\" \n        class=\"btn btn-info\">Submit</button>\n    </form>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
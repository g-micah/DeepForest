{"ast":null,"code":"import { Posting } from '../_model/posting';\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_service/posting.service\";\nimport * as i3 from \"@angular/forms\";\nexport class PostingFormComponent {\n  constructor(route, router, postingService) {\n    this.route = route;\n    this.router = router;\n    this.postingService = postingService;\n    this.state$ = this.route.paramMap.pipe(map(() => window.history.state));\n  }\n  ngOnInit() {\n    let editPostingId;\n    this.route.queryParams.subscribe(params => {\n      editPostingId = params['id'];\n    });\n    if (editPostingId != null) {\n      console.log(\"id:\" + editPostingId);\n    } else {\n      this.posting = new Posting();\n      this.mode = \"add\";\n    }\n  }\n  onSubmit() {\n    if (this.mode == \"add\") {\n      this.postingService.save(this.posting).subscribe(result => this.goToPostingList());\n    }\n    if (this.mode == \"edit\") {\n      this.postingService.update(this.posting).subscribe(result => this.goToPostingList());\n    }\n  }\n  goToPostingList() {\n    this.router.navigate(['/postings']);\n  }\n}\nPostingFormComponent.ɵfac = function PostingFormComponent_Factory(t) {\n  return new (t || PostingFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PostingService));\n};\nPostingFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostingFormComponent,\n  selectors: [[\"app-posting-form\"]],\n  decls: 25,\n  vars: 6,\n  consts: [[1, \"card\", \"my-5\"], [1, \"card-body\"], [3, \"ngSubmit\"], [\"postingForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"placeholder\", \"Enter posting title\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"title\", \"ngModel\"], [1, \"alert\", \"alert-danger\", 3, \"hidden\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"content\", \"name\", \"content\", \"placeholder\", \"Enter posting content\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"content\", \"ngModel\"], [\"for\", \"enabled\"], [\"type\", \"checkbox\", \"id\", \"enabled\", \"name\", \"enabled\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"enabled\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"]],\n  template: function PostingFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PostingFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function PostingFormComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.posting.title = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵtext(10, \"Name is required\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function PostingFormComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.posting.content = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 8);\n      i0.ɵɵtext(17, \"Email is required\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 12);\n      i0.ɵɵtext(20, \"Enabled\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function PostingFormComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.posting.enabled = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"button\", 15);\n      i0.ɵɵtext(24, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      const _r1 = i0.ɵɵreference(8);\n      const _r2 = i0.ɵɵreference(15);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.posting.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !_r1.pristine);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.posting.content);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", !_r2.pristine);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.posting.enabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.CheckboxRequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,GAAG,QAAQ,MAAM;;;;;AAO1B,OAAM,MAAOC,oBAAoB;EAMhCC,YAAoBC,KAAqB,EAC9BC,MAAc,EAAUC,cAA8B;IAD7C,UAAK,GAALF,KAAK;IACd,WAAM,GAANC,MAAM;IAAkB,mBAAc,GAAdC,cAAc;IAChD,IAAI,CAACC,MAAM,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,IAAI,CAACR,GAAG,CAAC,MAAMS,MAAM,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC;EACxE;EAEAC,QAAQ;IACP,IAAIC,aAAa;IACjB,IAAI,CAACV,KAAK,CAACW,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACzCH,aAAa,GAAGG,MAAM,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC;IACF,IAAGH,aAAa,IAAI,IAAI,EAAC;MACxBI,OAAO,CAACC,GAAG,CAAC,KAAK,GAACL,aAAa,CAAC;KAChC,MACI;MACJ,IAAI,CAACM,OAAO,GAAG,IAAIpB,OAAO,EAAE;MAC5B,IAAI,CAACqB,IAAI,GAAG,KAAK;;EAEnB;EAEAC,QAAQ;IACP,IAAG,IAAI,CAACD,IAAI,IAAI,KAAK,EAAE;MACtB,IAAI,CAACf,cAAc,CAACiB,IAAI,CAAC,IAAI,CAACH,OAAO,CAAC,CAACJ,SAAS,CAACQ,MAAM,IAAI,IAAI,CAACC,eAAe,EAAE,CAAC;;IAEnF,IAAG,IAAI,CAACJ,IAAI,IAAI,MAAM,EAAE;MACvB,IAAI,CAACf,cAAc,CAACoB,MAAM,CAAC,IAAI,CAACN,OAAO,CAAC,CAACJ,SAAS,CAACQ,MAAM,IAAI,IAAI,CAACC,eAAe,EAAE,CAAC;;EAEtF;EAEAA,eAAe;IACd,IAAI,CAACpB,MAAM,CAACsB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACpC;;AApCYzB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,8BAAuB;MAEbA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAC3BD,8BAAwB;MACHA,qBAAK;MAAAA,iBAAQ;MAChCA,mCAK4B;MALTA;QAAA;MAAA,EAA2B;MAA9CA,iBAK4B;MAE9BA,8BAA2D;MAAAA,iCAAgB;MAAAA,iBAAM;MACjFA,+BAAwB;MACHA,wBAAO;MAAAA,iBAAQ;MAClCA,sCAK8B;MALXA;QAAA;MAAA,EAA6B;MAAhDA,iBAK8B;MAC9BA,+BAA6D;MAAAA,kCAAiB;MAAAA,iBAAM;MAEtFA,+BAAwB;MACDA,wBAAO;MAAAA,iBAAQ;MACpCA,sCAI8B;MAJPA;QAAA;MAAA,EAA6B;MAApDA,iBAI8B;MAEhCA,mCACuB;MAAAA,uBAAM;MAAAA,iBAAS;;;;;;MA3BjBA,eAA2B;MAA3BA,2CAA2B;MAO3CA,eAA0B;MAA1BA,sCAA0B;MAGVA,eAA6B;MAA7BA,6CAA6B;MAM3CA,eAA4B;MAA5BA,sCAA4B;MAIVA,eAA6B;MAA7BA,6CAA6B;MAMhCA,eAAoC;MAApCA,0CAAoC","names":["Posting","map","PostingFormComponent","constructor","route","router","postingService","state$","paramMap","pipe","window","history","state","ngOnInit","editPostingId","queryParams","subscribe","params","console","log","posting","mode","onSubmit","save","result","goToPostingList","update","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\micah\\_code\\_repos\\DeepForest\\frontend-angular\\src\\app\\posting-form\\posting-form.component.ts","C:\\Users\\micah\\_code\\_repos\\DeepForest\\frontend-angular\\src\\app\\posting-form\\posting-form.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { PostingService } from '../_service/posting.service';\nimport { Posting } from '../_model/posting';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-posting-form',\n  templateUrl: './posting-form.component.html',\n  styleUrls: ['./posting-form.component.css']\n})\nexport class PostingFormComponent implements OnInit {\n\n\tposting: Posting;\n\tmode: String;\n    state$: any;\n\t\n\tconstructor(private route: ActivatedRoute,\n\t\t\t\tprivate router: Router, private postingService: PostingService) {\n\t\tthis.state$ = this.route.paramMap.pipe(map(() => window.history.state));\n\t}\n\t\n\tngOnInit() {\n\t\tlet editPostingId;\n\t\tthis.route.queryParams.subscribe(params => {\n\t\t\teditPostingId = params['id'];\n\t\t});\n\t\tif(editPostingId != null){\n\t\t\tconsole.log(\"id:\"+editPostingId);\n\t\t}\n\t\telse {\n\t\t\tthis.posting = new Posting();\n\t\t\tthis.mode = \"add\";\n\t\t}\n\t}\n\n\tonSubmit() {\n\t\tif(this.mode == \"add\") {\n\t\t\tthis.postingService.save(this.posting).subscribe(result => this.goToPostingList());\n\t\t}\n\t\tif(this.mode == \"edit\") {\n\t\t\tthis.postingService.update(this.posting).subscribe(result => this.goToPostingList());\n\t\t}\n\t}\n\t\n\tgoToPostingList() {\n\t\tthis.router.navigate(['/postings']);\n\t}\n}\n","<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <form (ngSubmit)=\"onSubmit()\" #postingForm=\"ngForm\">\n      <div class=\"form-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" [(ngModel)]=\"posting.title\" \n          class=\"form-control\" \n          id=\"title\" \n          name=\"title\" \n          placeholder=\"Enter posting title\"\n          required #title=\"ngModel\">\n      </div>\n      <div [hidden]=\"!title.pristine\" class=\"alert alert-danger\">Name is required</div>\n      <div class=\"form-group\">\n        <label for=\"email\">Content</label>\n        <input type=\"text\" [(ngModel)]=\"posting.content\" \n          class=\"form-control\" \n          id=\"content\" \n          name=\"content\" \n          placeholder=\"Enter posting content\"\n          required #content=\"ngModel\">\n        <div [hidden]=\"!content.pristine\" class=\"alert alert-danger\">Email is required</div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"enabled\">Enabled</label>\n        <input type=\"checkbox\" [(ngModel)]=\"posting.enabled\" \n          class=\"form-control\" \n          id=\"enabled\" \n          name=\"enabled\" \n          required #enabled=\"ngModel\">\n      </div>\n      <button type=\"submit\" [disabled]=\"!postingForm.form.valid\" \n        class=\"btn btn-info\">Submit</button>\n    </form>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}